<html>
<head>
<title>Клеточные автоматы</title>
<meta http-equiv="Content-Type" content="text/html; charset=windows-1251">
</head>

<body bgcolor="#FFFFFF" text="#000000">
<div align="center"> 
  <p><font face="Arial, Helvetica, sans-serif" size="3"><b>Клеточные автоматы</b><br>
	(Методическое пособие по информатике <br>
	для 10-11 классов Лицея прикладных наук)</font></p>
  <p align="left"><font face="Arial, Helvetica, sans-serif" size="3">Сумина Галина 
	Алексеевна</font></p>
  <p align="center"><font face="Arial, Helvetica, sans-serif" size="3"><br>
	<b>Введение</b></font></p>
  <p align="left"><font face="Arial, Helvetica, sans-serif" size="3">Идея клеточных 
	автоматов появилась в конце сороковых годов 20 века. Она была задумана и сформулирована 
	Джоном фон Нейманом и Конрадом Цусе независимо друг от друга как универсальная 
	вычислительная среда для построения, анализа и сравнения характеристик алгоритмов 
	[1-2]. <br>
	<br>
	При разработке клеточных автоматов Дж. Фон Нейман за основу взял работу С. 
	Улама и впервые соединил в клеточных автоматах понятия вычислительное устройство 
	и данные, с которыми система оперирует. Данные и вычислительные устройства 
	собираются из одних и тех же структурных элементов. Джон фон Нейман поставил 
	перед собой задачу доказать возможность существования самовоспроизводящихся 
	автоматов. Если такую машину снабдить надлежащими инструкциями, она построит 
	точную копию самой себя. В свою очередь обе эти машины построят себе пары 
	и так далее в прогрессии 2, 4, 8, 16 …<br>
	<br>
	&quot;Клеточные автоматы являются дискретными динамическими системами, поведение 
	которых полностью определяется в терминах локальных зависимостей, в значительной 
	степени так же обстоит дело для большого класса непрерывных динамических систем: 
	определенных уравнениями в частных производных. В этом смысле клеточные автоматы 
	в информатике являются аналогом физического понятия &quot;поля&quot; ... клеточный 
	автомат может мыслиться как стилизованный мир. Пространство представлено равномерной 
	сеткой, каждая ячейка которой, или клетка, содержит несколько битов данных; 
	время идет вперед дискретными шагами, а законы мира выражаются единственным 
	набором правил, скажем, небольшой справочной таблицей, по которой любая клетка 
	на каждом шаге вычисляет свое новое состояние по состояниям ее близких соседей. 
	Таким образом, законы системы являются локальными и повсюду одинаковыми. &quot;Локальный&quot; 
	означает, что для того, чтобы узнать, что произойдет здесь мгновение спустя, 
	достаточно посмотреть на состояние ближайшего окружения: никакое дальнодействие 
	не допускается. &quot;Одинаковость&quot; означает, что законы везде одни и 
	те же: я могу отличить одно место от другого по форме ландшафта, а не по какой-то 
	разнице в законах&quot; [3]. <br>
	<br>
	Клеточные автоматы - это не просто машина, работающая с полем, разбитым на 
	клетки. Область применение клеточных автоматов почти безгранична: от &quot;простейших&quot; 
	&quot;Крестиков-ноликов&quot; и до искусственного интеллекта. Слово &quot;простейшие&quot; 
	взято в кавычки, потому что даже такая простая игра, как &quot;Крестики-нолики&quot;, 
	оказывается очень не простой, если начать серьезные исследования. Например, 
	случай квадрата третьего порядка действительно кажется простым, если первый 
	игрок X начинает игру с центральной клетки, то он легко может свести партию 
	к ничьей, которая всегда заканчивается одной и той же финальной позицией. 
	А если взять квадрат более высокого порядка? Если цель игры состоит в том, 
	чтобы на доске порядка n выстроить ряд из n крестиков или ноликов, то в такой 
	игре второй участник может всегда добиться ничьей. Существует много других 
	разновидностей игры &quot;тик-так-тоу&quot; (тик-так-тоу - английское название 
	игры в крестики-нолики, берущее свое начало от слов детской считалочки). Так 
	в свое время А. К. Остин предложил игру в &quot;безумные крестики-нолики&quot;, 
	в которой оба игрока, делая очередной ход, могут рисовать, что пожелают - 
	хоть крестик, хоть нолик. Мартин Гарднер показал, что такая игра всегда заканчивается 
	победой того, кто сделал первый ход. В игре в &quot;безумные поддавки&quot; 
	игроки рисуют, что хотят, и проигрывает тот, кто будет вынужден первым составить 
	ряд из трех крестиков или ноликов. Годится та же простая стратегия симметрии, 
	с помощью которой при обычной игре в &quot;поддавки&quot; первый игрок может, 
	по крайней мере, вынудить противника к ничьей, что было показано Соломоном 
	У. Голомбом и Робертом Эбботом в 1964 году. <br>
	<br>
	Стратегия симметрии заключается в следующем: начав игру с центральной клетки, 
	первый игрок в дальнейшем всегда должен делать ход в клетку, противоположную 
	той в которой сделал ход его противник, и, кроме того, всегда должен ставить 
	крестик, если тот поставил нолик, и наоборот.<br>
	Невозможно описать все существующие разновидности игры в крестики-нолики на 
	плоскости. Так, например, вместо крестиков и ноликов могут использоваться 
	цифры - с целью получить определенную их сумму, или буквы - с тем, чтобы прочитать 
	определенное слово. Еще можно играть в крестики-нолики на неограниченной доске. 
	Это древняя восточная игра известна в Японии под названием &quot;го-моку&quot; 
	(пять камней).<br>
	<br>
	Если распространить игру в крестики-нолики на три измерения, то в случае кубика 
	третьего порядка первый игрок легко выигрывает, занимая своим начальным ходом 
	центральную ячейку. В случае игры в трехмерные поддавки также выигрывает первый 
	игрок. Поскольку при игре в кубике третьего порядка ничейные позиции невозможны, 
	второй игрок, в конце концов, вынужден построить ряд из трех символов. Д. 
	Коуэн доказал, что как и в случае игры в поддавки на плоскости, стратегия 
	симметрии является единственно возможной для выигрыша. При игре с кубиком 
	четвертого порядка оказываются возможными ничьи, однако, пока не установлено 
	может ли первый игрок обеспечить себе выигрыш.<br>
	<br>
	Поскольку в обычной игре ничейный результат на доске третьего порядка возможен 
	лишь в двумерном случае, а на доске четвертого порядка - лишь в трехмерном, 
	было высказано предположение, что в n-мерном пространстве наименьшая доска, 
	на которой можно сделать ничью, должна иметь n+1 &quot;клеток&quot; на каждой 
	стороне. Впервые этот факт установил Альфред У. Хейлз в 1960-тых годах, построив 
	ничейную позицию на гиперкубе четвертого порядка, на четырехмерном кубе&quot;.<br>
	<br>
	&quot;В 1970 году математик Джон Конвей придумал клеточный автомат, который 
	на долгое время заинтриговал весь мир и известен как игра &quot;Жизнь&quot;. 
	Можно считать, что игра описывает популяцию неких организмов, развивающуюся 
	во времени и пространстве в соответствии с заданными законами размножения 
	и вымирания. Играть можно на шахматной доске или на экране компьютера. Примерами 
	клеточных автоматов являются: крестики - нолики, шашки, шахматы, нарды и вообще 
	любая игра, происходящая на поле с клетками.<br>
	<br>
	Среди наиболее значительных вкладов в теорию клеточных автоматов самую громкую 
	известность получил способ доказательства существования конфигураций под названием 
	&quot;Сад Эдема&quot;. Эти конфигурации не могут возникать в процессе игры, 
	поскольку никакая предшествующая отличного от них типа не может породить их. 
	Поэтому такие конфигурации должны быть заданы с самого начала - в нулевом 
	поколении. <br>
	<br>
	Клеточные автоматы изучаются и по сей день, они находят новые области применения. 
	Например, Алви Р. Смит, специалист по теории клеточных автоматов из Нью-йоркского 
	университета, работает над созданием автоматов, имитирующих машины для распознавания 
	образов. Тогда можно будет применить принципы, по которым работает глаз в 
	электронике.<br>
	</font></p>
  <p align="center"><font face="Arial, Helvetica, sans-serif" size="3"><b>Игра 
	&quot;Жизнь&quot;</b></font></p>
  <p align="left"><font face="Arial, Helvetica, sans-serif" size="3">Клеточный 
	автомат представляет собой совокупность пространства, поделенного на клетки, 
	в каждой из которых содержится некое значение, и правил, задающих закон преобразования 
	при совершении шага. Это пространство может быть как плоскостью, так и любым 
	N-мерным пространством.<br>
	<br>
	Представим себе некоторое однородное пространство, состоящее из клеток. Каждая 
	клетка обладает несколькими состояниями, которые могут зависеть от следующих 
	параметров: <br>
	</font></p>
</div>
<ul>
  <li> 
	<div align="left"><font face="Arial, Helvetica, sans-serif" size="3">&quot;Соседи&quot; 
	  клетки - клетки, располагающиеся в непосредственной близости от данной;</font></div>
  </li>
  <li> 
	<div align="left"><font face="Arial, Helvetica, sans-serif" size="3"> количество 
	  ходов, прошедших от начала игры;</font></div>
  </li>
  <li> 
	<div align="left"><font face="Arial, Helvetica, sans-serif" size="3">свойства 
	  самой клетки и т.д.<br>
	  Правила игры достаточно просты:</font></div>
  </li>
  <li> 
	<div align="left"><font face="Arial, Helvetica, sans-serif" size="3"> Полем 
	  для игры является бесконечная плоскость, разбитая на клетки.</font></div>
  </li>
  <li> 
	<div align="left"><font face="Arial, Helvetica, sans-serif" size="3"> Каждая 
	  клетка может находиться в двух состояниях: &quot;живом&quot; и &quot;мертвом&quot;. 
	  Правила перехода клетки в новое состояние выбирается из следующих критериев: 
	  минимальное, максимальное количество соседей для &quot;рождения&quot; клетки, 
	  минимальное, максимальное количество соседей для &quot;вымирания&quot; клетки.<br>
	  <br>
	  Конвей много экспериментировал с этими параметрами и остановился на следующем:</font></div>
  </li>
  <li> 
	<div align="left"><font face="Arial, Helvetica, sans-serif" size="3">Соседями 
	  клетки являются все восемь клеток, имеющих либо общую сторону, либо общую 
	  вершину.</font></div>
  </li>
  <li> 
	<div align="left"><font face="Arial, Helvetica, sans-serif" size="3"> Клетка 
	  рождается, если количество соседей равно 3.</font></div>
  </li>
  <li> 
	<div align="left"><font face="Arial, Helvetica, sans-serif" size="3"> Клетка 
	  умирает, если количество соседей либо больше 3 (перенаселение), либо меньше 
	  2 (одиночество). (Модель 3323)<br>
	  <br>
	  В процессе игры популяция непрестанно претерпевает необычные, нередко очень 
	  красивые и всегда неожиданные изменения. Иногда первоначальная колония организмов 
	  вымирает, но, в большинстве своем, исходные конфигурации либо переходят 
	  в устойчивые и перестают изменяться, либо переходят в колебательный режим. 
	  Наблюдается тенденция к приобретению симметрии конфигурациями, которых на 
	  первый взгляд, никак не назвать симметричными.<br>
	  <br>
	  Для начала условимся классифицировать конфигурации по следующим параметрам:<br>
	  1) По количеству клеток в комбинации: единичная клетка, дуплет, триплет 
	  и т.д.<br>
	  2) По перспективе развития: развивающиеся, стабильные, вымирающие.<br>
	  3) По расположению клеток относительно друг друга.<br>
	  <br>
	  Очевидно, что конфигурация, состоящая из одной клетки, как и любая пара 
	  клеток, расположенных по горизонтали, вертикали, или диагонали, погибает 
	  на <br>
	  первом же ходу, поэтому рассмотрим простейшие конфигурации, состоящие из 
	  3 клеток (тримино), и проследим их эволюцию в течение нескольких ходов:<br>
	  </font></div>
  </li>
</ul>
<table width="90%" border="0" cellspacing="0" cellpadding="0">
  <tr> 
	<td width="54%" height="223"> 
	  <p><font face="Arial, Helvetica, sans-serif" size="3"><img src="http://saripkro.r2.ru/for_teacher/konkurs/inform/Sumina/1.gif" width="364" height="216"></font></p>
	  <p>&nbsp;</p>
	  <p>&nbsp;</p>
	</td>
	<td width="46%" valign="top" height="223"><font face="Arial, Helvetica, sans-serif" size="3">Первые 
	  три конфигурации на втором ходу погибают. Относи-тельно третей конфигурации 
	  заметим, что любой диагональный ряд клеток с каждым ходом с каждого конца 
	  по клетке. Четвертая конфигурация на вто-ром ходу переходит в устойчивую 
	  конфигурацию &quot;Блок&quot;. Пятая конфигурация является цикличес-кой 
	  - она повторяет себя каждые 2 хода - &quot;Мигалка&quot;</font></td>
  </tr>
</table>
<p><font face="Arial, Helvetica, sans-serif" size="3">Остальные триплеты (без 
  учета ориентации) исчезают на первом же ходу. Пойдем дальше и возьмем в качестве 
  основы конфигурацию, состоящую из четырех клеток (тетрамино): </font></p>
<p><font face="Arial, Helvetica, sans-serif" size="3">Простые конфигурации являются 
  устойчивыми. Ниже перечислена большая часть устойчивых конфигураций. </font></p>
<table width="90%" border="0" cellspacing="0" cellpadding="0">
  <tr> 
	<td width="54%"><font face="Arial, Helvetica, sans-serif" size="3"><img src="http://saripkro.r2.ru/for_teacher/konkurs/inform/Sumina/2.gif" width="322" height="263"></font></td>
	<td width="46%" valign="top"><font face="Arial, Helvetica, sans-serif" size="3">Вторая 
	  и третья конфигурации после второго хода переходят в устойчивую конфигурацию, 
	  называемую &quot;Ульем&quot;. Четвертая конфигурация переходит в &quot;Улей&quot; 
	  на третьем ходу. Пятая конфигурация после девяти ходов переходит в устойчивую 
	  конфигурацию, называемую &quot;Навигационные огни&quot;. &quot;Навигационные 
	  огни&quot; представляют комбинацию из четырех &quot;Мигалок&quot;, вертящихся 
	  в одинаковой фазе. Подобные конфигурации в процессе игры возникают довольно 
	  часто</font></td>
  </tr>
</table>
<div align="center"> 
  <p align="left"><font face="Arial, Helvetica, sans-serif" size="3"><br>
	Если увеличить число клеток в конфигурации до 5, то можно найти очень интересную 
	конфигурацию, которую сам Конвей назвал &quot;глайдером&quot;. Дело в том, 
	что эта конфигурация является периодической, она восстанавливает себе каждые 
	четыре хода, и при этом сдвигается по диагонали! </font></p>
  <table width="90%" border="0" cellspacing="0" cellpadding="0">
	<tr> 
	  <td width="70%"><font face="Arial, Helvetica, sans-serif" size="3"><img src="http://saripkro.r2.ru/for_teacher/konkurs/inform/Sumina/3.gif" width="487" height="176"></font></td>
	</tr>
  </table>
  <p align="left"><font face="Arial, Helvetica, sans-serif" size="3">Для изучения 
	подобного рода конфигураций, Конвей ввел понятие скорости света в своей игре. 
	Скорость, с которой передвигается шахматный король, и была названа скоростью 
	света. </font></p>
  <table width="90%" border="0" cellspacing="0" cellpadding="0">
	<tr> 
	  <td><font face="Arial, Helvetica, sans-serif" size="3"><img src="http://saripkro.r2.ru/for_teacher/konkurs/inform/Sumina/4.gif" width="322" height="59"></font></td>
	</tr>
  </table>
</div>
<div align="left"> 
  <p><font face="Arial, Helvetica, sans-serif" size="3">Конвей открыл много передвигающихся 
	циклических конфигураций, которых он назвал &quot;космическими кораблями&quot;. 
	В этой терминологии глайдер является &quot;космическим кораблем легчайшего 
	веса&quot;. Он также показал, что можно продлить корпус &quot;космического 
	корабля&quot; на сколь угодное количество клеток, но если у &quot;корабля&quot; 
	длина корпуса больше шести клеток, в &quot;полете&quot; возникают &quot;искры&quot;, 
	которые мешают полету. Для поглощения искр, требуется эскорт из &quot;космических 
	кораблей&quot; меньшего размера. Так, например &quot;космическому кораблю&quot; 
	с корпусом в 100 клеток требуется целая флотилия, состоящая из 33 &quot;кораблей&quot; 
	меньших размеров. Тем, кто хочет подробнее узнать об игре &quot;Жизнь&quot; 
	можно рекомендовать книги М. Гарднера &quot;Математические досуги&quot; и 
	&quot;Крестики-нолики&quot;.<br>
	<br>
	Игра &quot;Жизнь&quot; нашла свое применение в биологии как игра &quot;Аква-Тор&quot;, 
	которая моделирует поведение системы, состоящей из двух популяций, условно 
	называемых &quot;травоядные&quot; и &quot;хищники&quot;. Пищей для &quot;хищников&quot; 
	являются особи &quot;травоядных&quot;, пищи же для &quot;травоядных&quot; 
	бесконечно много. Полем для игры является тор - квадрат, замкнутый сам на 
	себе, т.е. если особь достигает крайней клетки квадрата, она переносится на 
	противоположную сторону квадрата автоматически (примером тора может служить 
	любая планета, например, Земля). Правила игры следующие:</font></p>
</div>
<ul>
  <li> 
	<div align="left"><font face="Arial, Helvetica, sans-serif" size="3">особь 
	  может переместиться на любую клетку, имеющую с данной общую сторону. Направление<br>
	  выбирается случайно. </font></div>
  </li>
  <li><font face="Arial, Helvetica, sans-serif" size="3">особь может оставить 
	потомство в той клетке, из которой она переместилась. Потомство появляется 
	периодически, период является параметром.</font></li>
  <li><font face="Arial, Helvetica, sans-serif" size="3">если особь является &quot;хищной&quot;, 
	то она может поглотить свою жертву, при этом перемещаясь на<br>
	место жертвы</font></li>
  <li><font face="Arial, Helvetica, sans-serif" size="3">если &quot;хищная&quot; 
	особь не находит себе пищи в течение определенного времени (называемого <br>
	временем смерти), то она погибает. Время смерти является параметром.<br>
	</font></li>
</ul>
<div align="center"> 
  <p align="left"><font face="Arial, Helvetica, sans-serif" size="3">Построенная 
	модель исследует поведение экосистемы Мирового океана. &quot;Хищниками&quot; 
	являются Акулы, &quot;травоядными&quot; - Рыбы. Дополнительным фактором является 
	течение, которое влияет на поведение рыб. На поведение акул оно не влияет 
	- акулы выбирают направление случайно из четырех возможных. Если же акула 
	находится на соседней клетке с рыбой, то она перемещается в клетку своей жертвы, 
	поглощая ее. Потомство появляется как у акул, так и у рыб. Рыбы, как травоядные, 
	приносят потомство чаще, чем хищные акулы. Кроме того, время смерти акулы 
	равно периоду потомства, увеличенного на единицу. Таким образом, без наличия 
	пищи, акула приносит потомство и погибает на следующем ходу. <br>
	<br>
	Принцип работы программы схож с принципом работы игры &quot;Жизнь&quot;. Строится 
	квадратная матрица, в каждой ячейке которой записано число - 0, 1 или 2, если 
	в ячейку пусто, рыба или акула соответственно. В любой момент можно добавить 
	или убрать существо из любой ячейки матрицы. Далее на основе старой матрицы 
	строится новая, которая соответствует следующему этапу эволюции системы. </font></p>
  <table width="90%" border="0" cellspacing="0" cellpadding="0">
	<tr> 
	  <td width="42%"><font face="Arial, Helvetica, sans-serif" size="3"><img src="http://saripkro.r2.ru/for_teacher/konkurs/inform/Sumina/5.gif" width="268" height="204"></font></td>
	  <td width="58%" valign="top"><font face="Arial, Helvetica, sans-serif" size="3">На 
		этой картинке представлена сцена &quot;прогрызания&quot; группы акул сквозь 
		косяк рыб.</font></td>
	</tr>
  </table>
  <p align="left"><font face="Arial, Helvetica, sans-serif" size="3">Такие автоматы 
	используются для моделирования поведения во времени и пространстве популяций 
	живых организмов. Чтобы пояснить, о чем идет речь, опишем автомат Aquatorus, 
	предложенный Аланом Дьюдни [9]. Здесь элементами автомата являются не просто 
	участки среды, а объекты различных типов, способные перемещаться в среде и 
	взаимодействовать между собой. В автомате Дьюдни таких типов два: акулы и 
	рыбы. Некоторый временной параметр задает период, после которого у объектов 
	каждого типа возникает потомство, т.е. новый объект того же типа. Еще один 
	параметр задает время жизни объектов каждого типа, причем для акул он меньше, 
	но последние могут продлить свое существование, поглотив объект типа, рыба. 
	<br>
	<br>
	При достаточно большом размере виртуальной среды, не представляет большой 
	сложности подобрать вышеназванные параметры таким образом, чтобы система существовала 
	достаточно долго. При этом количество рыб и акул будет испытывать колебания, 
	но не упадет до нуля. Наблюдения за моделью показали, что возникновение упорядоченности 
	в характере распределения объектов разных классов по среде, как правило, приводило 
	к гибели одной из популяций. <br>
	<br>
	Как отмечает Дьюдни, статистические данные по колебанию числа особей каждого 
	вида намного лучше описывают встречающиеся в природе изменения количества 
	хищников и жертв, чем решение уравнений аналитической модели. <br>
	</font></p>
  <p align="center"><font face="Arial, Helvetica, sans-serif" size="3"><b>&quot;Жизнь&quot; 
	в пространстве</b></font></p>
  <p align="left"><font face="Arial, Helvetica, sans-serif" size="3">Эта игра 
	является естественным продолжением игры Конвея. Впервые этим вопросом задался 
	американский профессор компьютерных наук И. Бейс в 80-е годы. Его первым шагом 
	в этой области было написание программы для работы с пространством - он писал 
	на Макинтоше, для ускорения работы вместо кубиков используя шары. В последствие 
	Бейс пишет книгу, которая так и называется &quot;Трехмерная &quot;Жизнь&quot;. 
	В ней он описывает несколько вариантов игры (Бейс использует терминологию, 
	основанную на кондициях развития популяции, в его терминологии игра Конвэя 
	- &quot;модель 3323&quot;). &quot;Из всех возможных моделей &quot;Жизни&quot; 
	в пространстве для нас самой главной является модель 5545&quot; - пишет он 
	- &quot;как равноправный наследник модели Конуэя 3323&quot;. Бейс пишет, что 
	именно эта модель является не менее (если не более) интересной для исследователей 
	во всех областях науки. В своей книге он приводит целую энциклопедию по &quot;трехмерным 
	формам жизни&quot;. Это и &quot;штанга&quot;, и &quot;пьедестал&quot;, и &quot;кувшин&quot;, 
	и еще много других не менее интересных комбинаций. <br>
	<br>
	Помимо модели 5545, Бейс также рассматривает модель 7767, которая, кстати, 
	больше похожа на &quot;Жизнь&quot;. Дело в том, что если в этой модели представить 
	конфигурацию Конвэя как объект, состоящий из всех клеток конфигурации, многократно 
	наслоенных друг на друга, чтобы получился трехмерный объект толщиной в два 
	кубика, то такая конфигурация будет вести себя так же, как плоская конфигурация 
	Конвэя! <br>
	</font></p>
  <p align="center"><font face="Arial, Helvetica, sans-serif" size="3"><b>Заключение</b></font></p>
  <p align="left"><font face="Arial, Helvetica, sans-serif" size="3">Тема клеточных 
	автоматов очень актуальна, т.к. может привести к разгадкам многих вопросов 
	в окружающем мире. Например: игра &quot;Жизнь&quot; была применена для анализа 
	социально-экономических схем и применялась к вопросу о спиралевидности большинства 
	галактик.<br>
	<br>
	Конвей говорит: &quot;Ранее я писал о том, что наша Вселенная, быть может, 
	представляет собой огромный клеточный автомат, управляемый движением элементарных 
	частиц в соответствии с некоторыми правилами. Теперь же я все более утверждаюсь 
	в своей догадке&quot;.<br>
	<br>
	Клеточные автоматы применимы не только в математике, физике, биологии (кстати, 
	сейчас Конуэй придумал еще одно применение клеточных автоматов в этой области: 
	представим себе достаточно большое количество &quot;первичного бульона&quot; 
	из хаотически распределенных клеток, если можно ожидать появления из такого 
	хаоса структур, способных самовоспроизводить себя, то это еще одно подтверждение 
	теории зарождения жизни на Земле). Теория клеточных автоматов наиболее перспективно 
	прилагаема к вопросу о разработке самовосстанавливаемых электронных цепей 
	и др.<br>
	<br>
	По своему поведению клеточные автоматы делятся на четыре класса. К первому 
	классу относятся автоматы, приходящие через определенное время к устойчивому 
	однородному состоянию. Автоматы второго класса через некоторое время после 
	пуска генерируют стационарные или периодические во времени структуры. В автоматах 
	третьего класса по прошествии некоторого времени перестает наблюдаться корреляция 
	процесса с начальными условиями. Наконец, поведение автоматов четвертого класса 
	сильно определяется начальными условиями и с их помощью можно генерировать 
	весьма различные шаблоны поведения. Такие автоматы являются кандидатами на 
	прототип клеточной вычислительной машины. В частности, с помощью специфических 
	клеточных конфигураций игры Жизнь, которая как раз и является автоматом четвертого 
	типа, можно построить все дискретные элементы цифрового компьютера. <br>
	<br>
	Клеточные автоматы используются для моделирования гидродинамических течений, 
	так как уравнения гидродинамики соответствуют математической модели, описывающей 
	поведение решетчатого газа, одного из клеточных автоматов, на макроуровне. 
	Структуры, возникающие в игре Жизнь, очень точно повторяют возмущение поведение 
	поверхности потока жидкости механическим препятствием. Примитивные одномерные 
	клеточные автоматы могут моделировать процесс горения различного характера. 
	<br>
	<br>
	Отметим еще одно применение клеточных автоматов - сжатие данных (или просто 
	шифрование). Пусть нам дано некое расположение значений, содержащихся в клетках 
	в пространстве автомата. Пусть через k шагов получается конфигурация, которая 
	каким-то образом может быть преобразована в файл. Если затраты на хранение 
	получившейся системы клеток больше, чем на то, что нам необходимо значит произошло 
	сжатие.<br>
	<br>
	Клеточные автоматы можно использовать и при реализации эффективной системы 
	распознавания образов. Один из возможных путей ее создания - построение динамической 
	системы, аттракторами которой в ее конфигурационном пространстве были бы типичные 
	картины-образы. Начальные условия всегда окажутся в области притяжения одной 
	из картин, с течением времени система трансформирует начальные параметры, 
	приведя их к наиболее близкой структуре-аттрактору. То есть произойдет автоматическое 
	распознавание образа. <br>
	<br>
	Теоретическая модель подобной динамической системы была предложена Дж. Хопфилдом 
	и названа спиновым стеклом. Спиновое стекло состоит из набора элементов, каждый 
	из которых обладает положительным или отрицательным спином. Задается некоторая 
	матрица попарных взаимодействий элементов, определяющая суммарную энергию 
	взаимодействующих спинов. Со временем состояние элементов меняется таким образом, 
	чтобы понизить полную энергию системы. <br>
	<br>
	Оказывается, матрица взаимодействий может быть записана таким образом, чтобы 
	соответствовать состояниям с минимумом энергии для нескольких картин состояния 
	элементов. При этом некоторое начальное состояние элементов со временем сэволюционирует 
	в ближайшее с минимумом энергии, или, что то же самое, в наиболее похожее, 
	запрограммированное в матрице. Собственно в этом и состоит процесс распознавания 
	образов. На спиновых матрицах можно построить и обучающиеся системы. В них 
	элементы матрицы взаимодействия имеют состояние программирования, когда их 
	значение меняется по определенному закону, учитывающему демонстрируемый образ, 
	то есть текущее состояние спиновых элементов. <br>
	<br>
	Недостаток такой схемы системы распознавания образов состоит в невозможности 
	анализа закономерностей во входных данных. Его лишены так называемые персептроны, 
	принцип действия которых описан далее. Персептрон имеет сетчатку, т.е. набор 
	клеток, принимающих входной образ. Помимо сетчатки в персептроне присутствуют 
	элементы (надо заметить, что их количество превышает число клеток сетчатки), 
	анализирующие состояние определенного подмножества клеток сетчатки. Выходной 
	сигнал такого элемента передается на следующий логический уровень. Выходной 
	сигнал является положительной реакцией на появление во вверенной такому элементу 
	части сетчатки одного из заданных образов. В конце концов, сигналы поступают 
	на центральный анализатор, который умножает их на соответствующие весовые 
	коэффициенты, складывает их и оценивает уровень результата на предмет превышения 
	им некоторого заданного порога. <br>
	<br>
	Возможно построить прибор, обнаруживающий некоторые несложные зависимости 
	в демонстрируемых образах, типа наличия линий определенной ориентации, геометрических 
	фигур и т.п. Персептроны также могут иметь механизм обучения. <br>
	<br>
	Можно использовать клеточные автоматы и при решении оптимизационных задач. 
	Часто в различных сферах деятельности возникают задачи нахождения оптимального 
	варианта из неограниченного числа возможных. Точного решения, как правило, 
	не требуется, но дискретный компьютер не способен эффективно дать даже приблизительно 
	оптимальный результат. Рассмотрим в качестве элементарного примера задачу 
	о прокладке трубопровода между двумя населенными пунктами, причем стоимость 
	прокладки зависит от территории, по которой пройдет трасса, а целевой функцией 
	является максимальная дешевизна работы. Для ее решения существует оригинальная 
	модель аналогового компьютера, представляющая собой два листа некоторого материала, 
	изображающие территорию строительства, соединенных двумя шпильками, в местах, 
	соответствующим населенным пунктам. Расстояние между листами неравномерно 
	по всей поверхности и моделирует распределение стоимости прокладки на данном 
	участке местности. Прибор опускается в мыльный раствор и образовавшаяся пленка, 
	автоматически придя к состоянию с наименьшей энергией, ляжет на линии одного 
	из наиболее оптимальных маршрута. В частности, для задач поиска разбиения 
	графа на группы с минимальным числом связей между ними, для спиновой сетки 
	задается матрица связей со значениями 0 или 1 для несвязанных и связанных 
	элементов соответственно. Суть решения сводится к переходу в состояние с минимумом 
	энергии. Отличие от системы распознавания образов состоит в подборе функции 
	энергетических переходов элементов. Функция должна позволять элементу переходить 
	вверх по поверхности потенциальной энергии, чтобы обеспечить возможность прохождения 
	локального минимума. Проблема решается введением вероятностного алгоритма 
	переходов, т.е. переход с приростом энергии возможен, но с вероятностью, обратно 
	пропорциональной этому приросту. <br>
	<br>
	Клеточные автоматы можно использовать при составлении генетических алгоритмов. 
	Представим себе клеточный автомат, для клеток которого дополнительным условием 
	выживания является выработка некоторой последовательности выходных данных 
	(назовем ее условно реакцией) в ответ на последовательность входных данных 
	(являющейся свойством среды, раздражение), предсказывающая следующее состояние 
	среды. Чтобы такой автомат функционировал, добавляется также механизм случайного 
	изменения правил выработки реакции (мутации) и передачи вновь возникающим 
	клеткам информации о правилах реагирования соседей (наследования). Помимо 
	исследования условий развития моделей живых систем, такой подход позволяет 
	решать и некоторые практические задачи, в частности поиск кратчайшего пути 
	на графе. Структура графа кодируется некоторым образом в хромосомах клеток. 
	Предполагается, что алгоритмы, приобретенные вследствие мутаций и наследования, 
	будут соответствовать решениям задачи. <br>
	<br>
	Таким образом, действительно, клеточные автоматы нашли и находят широкое применение 
	во многих сферах человеческой деятельности, многие из которых стало возможным 
	решить только с помощью компьютера.<br>
	<br>
	В Лицее прикладных наук во время внеклассной и кружковой работы разработан 
	ряд программ по клеточным автоматам. Одна из программ, выполненная учеником 
	11 класса (сейчас уже студентом 1 курса факультета нелинейных процессов СГУ 
	- Панаитовым Евгением) представляет собой реализацию одномерной, двухмерной 
	и трехмерной модели игры &quot;Жизнь&quot; и &quot;Аква-Тор&quot;. Данная 
	программа была показана на смотре-конкурсе программных продуктов учащихся 
	города (2 место). В Приложении приведена реализация данной методики в авторском 
	исполнении Панаитова Е.</font></p>
  <p><font face="Arial, Helvetica, sans-serif" size="3"><br>
	<b>Литература</b></font></p>
  <p align="left"><font face="Arial, Helvetica, sans-serif" size="3">1. Трубецков 
	Д.И. Колебания и волны для гуманитариев: учебное пособие для вузов. Саратов: 
	Изд-во ГосУНЦ &quot;Колледж&quot;, 1997. 392 с. <br>
	2. Наумов Л. Как увеличить скорость &quot;Жизни&quot;, или Эффективная организация 
	данных для повышения скорости поиска клеток и разрешения отношений соседства 
	при реализации клеточного автомата Джона Хортона Конвея &quot;Жизнь&quot;/ 
	Информатика, 2001, № 33-34.<br>
	3. Тоффоли Т., Марголус Н. Машина клеточных автоматов. М.; Мир, 1991. 280 
	с. <br>
	4. Гарднер М. Математические досуги. - Москва, &quot;Мир&quot;, 1972.<br>
	5. Гарднер М. Крестики-нолики; Пер. с англ. - М.: Мир, 1988. - 352 с.<br>
	6. Информатика: Энциклопедический словарь для начинающих / сост. Д. А. Поспелов. 
	- Москва, &quot;Педагогика-Пресс&quot;, 1994.<br>
	7. Уэзерелл Ч., Этюды для программистов. - Москва, &quot;Мир&quot;, 1982.<br>
	8. Бейс. И, Трехмерная игра &quot;Жизнь&quot;. - Москва, &quot;Мир&quot;, 
	1988.<br>
	9. Дьюдни А. Трехмерные версии игры Жизнь // В мире науки, 1987, № 4. <br>
	10. Хейес Б. Клеточный автомат // В мире науки, 1984, № 5. <br>
	</font></p>
  <p align="left"><font face="Arial, Helvetica, sans-serif" size="3"><a href="http://saripkro.r2.ru/for_teacher/konkurs/inform/Sumina/pril.htm">Приложение 
	</a><br>
	<a href="http://saripkro.r2.ru/for_teacher/konkurs/inform/Sumina/ca32.rar">Программный модуль</a> (rar, 152 кбайт)</font></p>
  <p align="left">&nbsp;</p>
  <p align="left">&nbsp;</p>
  <p align="center"><font face="Arial, Helvetica, sans-serif" size="3"><span lang=RU style='font-size:13.0pt;mso-bidi-font-size:
12.0pt'><font color="#FF3366"><a href="http://saripkro.r2.ru/php/forum/forum.phtml?id=7934"><font color="#FF3333">Оставить 
	отзыв о работе в форуме</font></a></font></span></font></p>
  <p><font face="Arial, Helvetica, sans-serif" size="3"> 
	<!--BEGIN   ALL TYPES (IE)-->
<noscript>
<iframe src="http://a.lvt.ru/f33840x1" frameborder="0" vspace="0" hspace="0" width="468" height="60" marginwidth="0" marginheight="0" scrolling="no"><a href="http://a.lvt.ru/r33840x1x-989076677" target="_top"><img src="http://a.lvt.ru/b33840x1x-989076677" border="0" width="468" height="60"></a>
</iframe>
</noscript>
<script language="JavaScript">var rand = Math.floor(Math.random() * 1000000000);
document.write('<iframe src="http://a.lvt.ru/f33840x1_' + rand + '" frameborder="0" vspace="0" hspace="0" width="468" height="60" marginwidth="0" marginheight="0" scrolling="no">');
document.write('<a href="http://a.lvt.ru/r33840x1x' + rand + '" target="_top"><img src="http://a.lvt.ru/b33840x1x' + rand + '" border="0" width="468" height="60"></a>');
document.write('</iframe>');
</script>
<!--END -->

	</font></p>
  <p align="left">&nbsp;</p>
  <p align="left">&nbsp;</p>
</div>
</body>
</html>

<!-- This document saved from http://saripkro.r2.ru/for_teacher/konkurs/inform/Sumina/INDEX.HTM -->
